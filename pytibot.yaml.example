# this is a comment
Connection:
  server: localhost
  sslport: 6697
  port: 6667
  nickname: PyTIBot
  username:
  serverpassword:
  channels:
  adminbyhost: False
  admins:
  ignore:
  rejoinkicked: True

Logging:
  directory: /tmp/log/
  log_minor: True
  yaml: True

HTTPServer:
  port: 8080
  sslport: 8081
  certificate: /path/to/cert.pem
  privkey: /path/to/privkey.pem
  root:
    type: OverviewPage
    title: Root Resource
    children:
      logs:
        type: LogPage
        channel: '#mysuperchannel'
        title: Awesome Log Server
        search_pagelen: 5
        indexer_procs: 4 # use multiple processes for indexing logs
      # assets is automatically added to root

GitWebhook:
  channels:
    my_project:
    - "#mysuperchannel"
    - "#myotherchannel"
    default:
    - "#mydefaultchannel"
  sslport: 4041
  certificate: /path/to/cert.pem
  privkey: /path/to/privkey.pem
  github_secret: SECRETKEY
  gitlab_secret: SECRETKEY
  hook_report_users: [myadmin]
  PreventGitHubReviewFlood: false
  FilterRules:
  # example for github
  - eventtype == issues AND action == pinned
  # example for gitlab
  - eventtype == note AND object_attributes.noteable_type == Snippet
  Hooks:
    Push:
      default:
      - action: act1
        branches: <all>
        ignore_users: []
      my_project:
      - action: do_noop # exclude my_project from the default Push hook
  Actions:
    act1:
      type: process
      command: ./my_process
      path: /some/path/
      args: [1, 2]
      rungroup: run1
    do_noop:
      type: noop
      # rungroup is automatically set to default if not specified
  RungroupSettings:
    run1:
      clear_previous: True
      stop_running: False

Manhole:
  telnetport: 9999

Commands:
  hello: hello
  tell: tell
  morse: morse
  unmorse: unmorse
  joke: joke
  say: say
  random: rand
  whois: whois
  raw: raw
  pypi: search_pypi
  fortune: fortune

Aliases:
  cointoss: random heads tails
  whoami: whois $USER

Triggers:
  enabled: [youtube, import_this]

Simple Triggers:
  -
    trigger: trigger
    answer: This line was triggered by $USER in $CHANNEL.
  -
    trigger: can contain regex (\d+)
    answer: "be sure to escape : or #"

# Modules that are specific to a channel
Channelmodules:
  "#mysuperchannel":
  -
    ChannelLogger
  -
    Autokick:
      user_blacklist:
      - bad_user
      - evil_user
      msg_blacklist:
      - "evil word"
      user_whitelist:
      - trusted_user
      msg_whitelist:
      # regex!
      - $BOTNAME:\s*fortune
      # simple spam protection
      buffer_length: 6 # default 5
      repeat_count: 3 # default 3
      max_highlights: 3 # default 5
  -
    Greeter:
      standard_nicks: [test]
      patterns: ["*!webchat@*", "*!*@gateway/web/*"] # shell like pattern matching
      message: Welcome, $USER!
  "#myweirdchannel":
  -
    ChannelLogger

Actions:
  userkicked: Nice work $KICKER, noone liked $KICKEE anyways!
  kickedfrom: Nice try $KICKER, but that was to easy.

